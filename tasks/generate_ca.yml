---
- name: Create CA privatekey
  openssl_privatekey:
    backup: yes
    mode: 0600
    owner: root
    cipher: auto
    passphrase: "{{ ca_privatekey_password }}"
    path: "{{ ca_dir }}/private/cakey.pem"

- name: Create CA csr
  openssl_csr:
    basic_constraints_critical: yes
    basic_constraints: [CA:TRUE]
    # crlDistributionPoints="URI:http://{{ ansible_default_ipv4.address }}/ca.crl"]
    path: "{{ ca_dir }}/csr/ca.csr"
    privatekey_path: "{{ ca_dir }}/private/cakey.pem"
    privatekey_passphrase: "{{ ca_privatekey_password }}"
    common_name: "{{ ansible_default_ipv4.address }}"
    country_name: "{{ ca.country }}"
    organization_name: "{{ ca.org }}"
    organizational_unit_name: "{{ ca.ou }}"
    email_address: "{{ ca.email }}"

- name: Sign CA cert
  openssl_certificate:
    path: "{{ ca_dir }}/certs/cacert.pem"
    provider: selfsigned
    backup: yes
    privatekey_path: "{{ ca_dir }}/private/cakey.pem"
    privatekey_passphrase: "{{ ca_privatekey_password }}"
    csr_path: "{{ ca_dir }}/csr/ca.csr"
    mode: 0600
    owner: root

- name: Register CA cert hash
  command: openssl x509 -noout -hash -in ./certs/cacert.pem
  register: cacert_hash
  args:
    chdir: "{{ ca_dir }}"
  changed_when: false

- name: Create CAcert link
  file:
    src: "{{ ca_dir }}/certs/cacert.pem"
    dest: "{{ ca_dir }}/certs/{{ cacert_hash.stdout }}.0"
    state: link

- name: Ensure crl list
  file:
    path: "{{ item }}"
    mode: 0644
    state: touch
    owner: root
    group: root
  with_items:
    - "{{ ca_dir }}/certs/certs.db"
    - "{{ ca_dir }}/certs/certs.db.attr"
  changed_when: false

- name: Create crl.pem
  command: openssl ca -config openssl.cnf -passin pass:{{ ca_privatekey_password }} -gencrl -out crl/crl.pem
  args:
    chdir: "{{ ca_dir }}"
    creates: "{{ ca_dir }}/crl/crl.pem"

- name: Create CRL link
  file:
    src: "{{ ca_dir }}/crl/crl.pem"
    dest: "{{ ca_dir }}/crl/{{ cacert_hash.stdout }}.r0"
    state: link
