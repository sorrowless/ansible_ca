---
- name: Create CA privatekey
  openssl_privatekey:
    backup: yes
    mode: 0600
    owner: root
    cipher: auto
    passphrase: "{{ ca_privatekey_password }}"
    path: "{{ keys_dir }}/cakey.pem"

- name: Create CA csr
  openssl_csr:
    basic_constraints_critical: yes
    basic_constraints: ["CA:TRUE"]
    # crlDistributionPoints="URI:http://{{ ansible_default_ipv4.address }}/ca.crl"]
    path: "{{ csr_dir }}/ca.csr"
    privatekey_path: "{{ keys_dir }}cakey.pem"
    privatekey_passphrase: "{{ ca_privatekey_password }}"
    common_name: "{{ ansible_default_ipv4.address }}"
    country_name: "{{ ca.country }}"
    organization_name: "{{ ca.org }}"
    organizational_unit_name: "{{ ca.ou }}"
    email_address: "{{ ca.email }}"

- name: Sign CA cert
  openssl_certificate:
    path: "{{ certs_dir }}/cacert.pem"
    provider: selfsigned
    backup: yes
    privatekey_path: "{{ keys_dir }}cakey.pem"
    privatekey_passphrase: "{{ ca_privatekey_password }}"
    csr_path: "{{ csr_dir }}/ca.csr"
    mode: 0600
    owner: root

- name: Register CA cert hash
  command: "openssl x509 -noout -hash -in {{ certs_dir }}/cacert.pem"
  register: cacert_hash
  changed_when: false

- name: Create CAcert link
  file:
    src: "{{ certs_dir }}/cacert.pem"
    dest: "{{ certs_dir }}/{{ cacert_hash.stdout }}.0"
    state: link

- name: Ensure crl list
  file:
    path: "{{ item }}"
    mode: 0644
    state: touch
    owner: root
    group: root
  with_items:
    - "{{ certs_dir }}/certs.db"
    - "{{ certs_dir }}/certs.db.attr"
  changed_when: false

- name: Create crl.pem
  shell:
    cmd: |
      openssl ca -config {{ ca_dir }}/openssl.cnf \
        -passin pass:{{ ca_privatekey_password }} -gencrl \
        -out {{ crl_dir }}/crl.pem
  args:
    creates: "{{ crl_dir }}/crl.pem"

- name: Create CRL link
  file:
    src: "{{ crl_dir }}/crl.pem"
    dest: "{{ crl_dir }}/{{ cacert_hash.stdout }}.r0"
    state: link
